'''
https://leetcode.com/problems/valid-parentheses
'''

class ValidParen:
    def __init__(self, str):
        self.in_str = str
        str_valid = self.CountChars(self.in_str, "(", ")") and self.CountChars(self.in_str, "{", "}") and self.CountChars(self.in_str, "[", "]")
        print('str:', self.in_str, ' is valid', str_valid)

    def CountChars(self, in_str, open, close):
        open_count = 0
        close_count = 0
        open_seen = False

        for char in in_str:
            print(char, ' ', open_count, ' ', close_count, ' ', open_seen)
            if open_count == close_count:
                open_seen = False

            if char == open:
                open_seen = True
            if char == close:
                if not open_seen:
                    return False

            if close_count > open_count:
                return False
            if char == open:
                open_count += 1
            elif char == close:
                close_count += 1
        if close_count == open_count:
            return True
        else:
            return False

    # Check for close

# x = ValidParen(")()(")
# x = ValidParen("(")
x = ValidParen("()))((")
