'''

https://leetcode.com/problems/climbing-stairs/description/
You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. 
In how many distinct ways can you climb to the top?

 

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step

'''

from collections import defaultdict

class Stairs():
    def __init__(self):
        self.dict_stept = defaultdict(int)

    
    def DistinctWays(self, n):
        if n <= 1:
            return 1
        
        if self.dict_stept[n]:
            return self.dict_stept[n]
        else:
            self.dict_stept[n] = self.DistinctWays(n-1) + self.DistinctWays(n-2)
            return self.dict_stept[n]


n = 4

x = Stairs()
y = x.DistinctWays(n)
print(y)
