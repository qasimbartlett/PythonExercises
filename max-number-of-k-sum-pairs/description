'''
https://leetcode.com/problems/max-number-of-k-sum-pairs/description/?envType=study-plan-v2&envId=leetcode-75
'''

from collections import defaultdict

class solution(object):
    def __init__(self):
        print('Abba')

    def maxOperations(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        print(nums, k)

        # Create a map
        nums_dict = defaultdict(int)
        for i in nums:
            nums_dict[i] += 1
        # print(nums_dict)

        # Find pair
        pair_count = 0
        for one_num in nums:
            other_num = k - one_num
            print('')
            print(one_num, other_num)
            print('1.', nums_dict, pair_count)
            # if the other num exists; then we make a pair
            available_numbers = 0
            if one_num == other_num:
                available_numbers = 1
            if nums_dict[other_num] > available_numbers and nums_dict[one_num] > available_numbers:
                pair_count += 1
                nums_dict[other_num] -= 1
                nums_dict[one_num] -= 1
            print('2.', nums_dict, pair_count)
        return pair_count






nums = [1, 2, 3, 4]
k = 5
nums = [3, 1, 3, 4, 3]
k = 6
#nums = [2,5,4,4,1,3,4,4,1,4,4,1,2,1,2,2,3,2,4,2]
#k = 3
# ans 4

x = solution()
y = x.maxOperations(nums, k)
print(y)
